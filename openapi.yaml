openapi: 3.0.3

info:
  title: Project API
  description: Sofya's project-api
  version: 1.0.0

externalDocs:
  description: Repository
  url: https://github.com/sofya-corp/docs-api

servers:
  - url: http://localhost:3012
    description: Local dev

paths:
  "/":
    get:
      tags: ["Auth"]
      summary: "Get login page and csrf token"
      responses:
        "200":
          description: ""
  "/login":
    post:
      tags: ["Auth"]
      summary: "Log user in with email and password"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/login"
        required: true
      responses:
        "200":
          description: ""
  "/logout":
    get:
      tags: ["Auth"]
      summary: "Logout user"
      responses:
        "200":
          description: ""     
  "/api/users/{id}":
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
    get:
      tags: ["Users"]
      summary: "Get user by id"
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/user"
    patch:
      tags: ["Users"]
      summary: "Accept Cgu"
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/acceptCgu"           
  "/api/users/{id}/settings":
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
    patch:
      tags: ["Users"]
      summary: "Update user settings"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/settings"
      responses:
        "200":
          description: ""
          content:
            applicatiom/json:
              schema:
                type: object               
  "/api/users/{id}/theme":
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
    patch:
      tags: ["Users"]
      summary: "Toggle dark theme"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/theme"
      responses:
        "200":
          description: ""
          content:
            applicatiom/json:
              schema:
                type: object        
  "/api/users/{id}/projectRoles/{fk}":
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: fk
        in: path
        required: true
        schema:
          type: string
    patch:
      tags: ["Users"]
      summary: "Update projectRole"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/projectRoleFromUser"
      responses:
        "200":
           description: ""
           content:
             application/json:
               schema:
                 type: object
  "/api/projects":
    post:
      tags: ["Projects"]
      summary: "Create a new project"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/createProject"
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/project"
  "/api/projects/{id}":
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
    get:
      tags: ["Projects"]
      summary: "Get project by id"
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: object
    patch:
      tags: ["Projects"]
      summary: "Update project settings"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/project"
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/project"

  "/api/projects/{id}/image":
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
    delete:
      tags: ["Projects"]
      summary: "Delete project image"
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: object
                
  "/api/projects/{id}/upload/image":
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
    post:
      tags: ["Projects"]
      summary: "Upload project image"
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: string
              format: binary
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: object
                
  "/api/projects/{id}/download/image":
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: imageId
        in: query
        required: true
        schema:
          type: string
    get:
      tags: ["Projects"]
      summary: "Get project image"
      responses:
        "200":
          description: ""
          content:
            application/octet-stream:
              schema:
                type: string
                
  "/api/projects/{id}/applications/rel/{fk}":
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: fk
        in: path
        required: true
        schema:
          type: string
    put:
      tags: ["Projects"]
      summary: "Link application to project"
      responses:
        "200":
          description: ""
    delete:
      tags: ["Projects"]
      summary: "Unlink application from project"
      responses:
        "200":
          description: ""
    
  "/api/projects/{id}/archiveRestore":
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
    post:
      tags: ["Projects"]
      summary: "Archive or restore project"
      responses:
        "200":
          description: ""
          
  "/api/projects/{id}/groups":
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
    post:
      tags: ["Groups"]
      summary: "Create project group"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/createGroup"
      responses:
        "200":
          description: ""
     
    
components:
  schemas:
  
    login:
       type: object
       properties:
         email:
           type: string
         password:
           type: string
         _csrf:
           type: string
       required:
         - email
         - password
         - _csrf
         
    user:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        lastName:
          type: string
        firstName:
          type: string
    createProject:
          type: object
          properties:
            name:
              type: string
              
    project:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        name:
          type: string
        description:
          type: string
        tags:
          type: array
          items:
            type: object
            properties:
              label:
                type: string
              color:
                type: string
            required:
              - label
              - color
        deadline:
          type: string
          format: date-time
        deadlineLabel:
          type: string
        street:
          type: string
        postalCode:
          type: string
        city:
          type: string
        country:
          type: string
        position:
          type: object
          properties:
            type:
              type: string
              enum: ["Point"]
            coordinates:
              type: array
              items:
                type: number
                maxItems: 2
          required:
            - type
            - coordinates
        isArchived:
          type: boolean
          
    acceptCgu:
      type: object
      properties:
        cguAccepted:
          type: boolean
          
    settings:
      type: object
      properties:
        firstName:
          type: string
        lastName:
          type: string
        phone:
          type: string
        emailPeriodicity:
          type: string
          enum: ["daily", "weekly"]
        emailSendingDay:
          type: number
          minimum: 0
          maximum: 6
        emailSendingHour:
          type: number
          minimum: 0
          maximum: 6
          
    createGroup:
      type: object
      properties:
        code:
          type: string
        name:
          type: string
      required:
        - code
 
    theme:
      type: object
      properties:
        darkThemeEnabled:
          type: boolean
    projectRoleFromUser :
     type: object
     properties:
       subscribed:
         type: boolean